(env
 (_
  (flags
   (:standard -rectypes -w -27-33-39))))

(executable
 (name mul_run)
 ;(package noCanren-tests)
 ;(public_name noCanren.multifile-mul)
 (libraries GT OCanren OCanren.tester test_nat test_add test_mul)
 (modules mul_run)
 (preprocess
  (pps
   OCanren-ppx.ppx_repr
   OCanren-ppx.ppx_fresh
   OCanren-ppx.ppx_distrib
   GT.ppx_all)))

(cram
 ;(package noCanren)
 (deps ./mul_run.exe))

(library
 (name test_nat)
 (modules test_nat)
 (wrapped false)
 (libraries OCanren)
 (preprocess
  (pps
   OCanren-ppx.ppx_repr
   OCanren-ppx.ppx_fresh
   GT.ppx_all
   OCanren-ppx.ppx_distrib
   -new-typenames)))

(rule
 (targets test_nat.ml)
 (deps
  (:exec %{project_root}/src/noCanren.exe)
  (:input stuff/test_nat.ml))
 (action
  (run
   sh
   -c
   "%{exec} %{input} -o %{targets} | ocamlformat --enable-outside-detected-project --impl -")))

(library
 (name test_add)
 (modules test_add)
 (wrapped false)
 (libraries test_nat)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx)))

(rule
 (targets test_add.ml)
 (deps
  (:exec %{project_root}/src/noCanren.exe)
  (:input stuff/test_add.ml)
  stuff/stuff.cma)
 (action
  (run
   sh
   -c
   "%{exec} %{input} -rectypes -I stuff/.stuff.objs/byte -o %{targets} | ocamlformat --enable-outside-detected-project --impl -")))

(library
 (name test_mul)
 ;(package noCanren)
 (modules test_mul)
 (wrapped false)
 (libraries test_nat test_add GT)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx)))

(rule
 (targets test_mul.ml)
 ;(package noCanren-tests)
 (deps
  (:exec %{project_root}/src/noCanren.exe)
  (:input stuff/test_mul.ml)
  stuff/stuff.cma)
 (action
  (run
   sh
   -c
   "%{exec} %{input} -rectypes -I stuff/.stuff.objs/byte -o %{targets} | ocamlformat --enable-outside-detected-project --impl -")))
